@initActivities = ->
  DESCRIPTION_LENGTH = 100

  class Activity
    constructor: (data) ->
      @id = ko.observable data?.id
      @collection = ko.observable data?.collection
      @user = ko.observable data?.user
      @description = ko.observable data?.description
      @createdAt = ko.observable data?.created_at
      @expanded = ko.observable false
      @canBeExpanded = ko.computed => @description().length > DESCRIPTION_LENGTH

      @displayedDescription = ko.computed =>
        if !@canBeExpanded() || @expanded()
          @description()
        else
          "#{@description().substring(0, DESCRIPTION_LENGTH)}..."

    expand: => @expanded(true)

  class ActivityGroup
    constructor: () ->
    @create_from: (activity_kinds) ->



  class ActivitiesViewModel
    constructor: (activities) ->
      @activities = ko.observableArray []
      @hasMore = ko.observable true
      @loading = ko.observable false
      @pushActivities activities
      @selectedCollectionIds = ko.observableArray $.map($('.collection_id'), (x) -> x.value)

      @selectedActivityGroups = ko.observableArray[]

      @kinds = <%= Activity::Kinds.to_json %>

      @allActivityGroups = ActivityGroup.create_many_from(@kinds)

      @collectionsCount = $('.collection_id').length

      @selectedCollectionIds.subscribe => @refreshActivities()
      @selectedActivityGroups.subscribe => @refreshActivities()

      #The elements in these arrays must keep the same order as their appearances in the index.
      @changedPermissions = ['name_permission,changed','location_permission,changed','layer_membership,created','layer_membership,deleted','layer_membership,changed']
      @anonymousChangedPermissions = ['anonymous_name_location_permission,changed','anonymous_layer_permission,changed']

    pushActivities: (activities) =>
      if activities.length == 25
        activities = activities.slice(0, activities.length - 1)
      else
        @hasMore false

      @activities.push new Activity(activity) for activity in activities

    loadMore: =>
      @loading(true)
      @hasMore(true)

      q = @setQueryParams({})
      q.before_id = @activities()[@activities().length - 1].id() if @activities().length > 0

      $.get "/activity.json", q, (activities) =>
        @pushActivities(activities)
        @loading(false)

    setQueryParams: (q) =>
      if @selectedCollectionIds().length == 0
        q.collection_ids = [0]
      else if @selectedCollectionIds().length < @collectionsCount
        q.collection_ids = @selectedCollectionIds()

      if @selectedActivityGroups().length == 0
        q.kinds = [0]
      else if @selectedActivityGroups().length < @kinds.length
        q.kinds = @selectedActivityGroups().map((g) -> g.kinds).flatten

        #new_kinds = []
        #for item in q.kinds
        #  do (item) =>
        #    new_kinds = new_kinds.concat(item.split(';'))
        #q.kinds = new_kinds

      q

    refreshActivities: =>
      @activities([])
      @loadMore()

    checkAllCollectionIds: =>
      ids = $.map($('.collection_id'), (x) -> x.value)
      @selectedCollectionIds(ids) if @selectedCollectionIds().length != @collectionsCount

    uncheckAllCollectionIds: =>
      @selectedCollectionIds([]) if @selectedCollectionIds().length != 0

    kindsFromActivities: =>
      ks = @kinds.slice(0)
      kinds_copy = ks.slice(0)

      for kind in kinds_copy
        i = ks.indexOf(kind)
        if (@changedPermissions.indexOf(kind) > -1 || @anonymousChangedPermissions.indexOf(kind) > -1)
          ks.splice(i,1)
      ks.push(@changedPermissionsToString(@changedPermissions))
      ks.push(@changedPermissionsToString(@anonymousChangedPermissions))
      ks

    allActivityGroupsSelected: => @selectedActivityGroups().length == @allActivityGroups().length
    noActivityGroupSelected: => @selectedActivityGroups().length == 0

    checkAllKinds: =>
      @selectedActivityGroups(@allActivityGroups()) unless @allActivityGroupsSelected()

    uncheckAllKinds: =>
      @selectedActivityGroups([]) unless @noActivityGroupSelected()

    viewAsRSS: =>
      q = @setQueryParams({})
      params = $.param q

      url = "/api/activity.rss"
      url += "?#{params}" if params.length > 0
      window.open url

    refreshTimeago: => $('.timeago').timeago()

    changedPermissionsToString: (permissions) =>
      changedPermissionsToString = ""
      for permission in permissions
        changedPermissionsToString = changedPermissionsToString.concat(permission).concat(';')
      changedPermissionsToString.substring(0, changedPermissionsToString.length - 1)

  $.get "/activity.json", {}, (activities) =>
    window.model = new ActivitiesViewModel(activities)
    ko.applyBindings window.model
    window.model.checkAllKinds( )

    $('.hidden-until-loaded').show()
    window.model.refreshTimeago()
