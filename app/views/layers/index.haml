- content_for :head do
  :javascript
    $(function() { initLayers(); });
= render 'collections/tabs'

.tabsline

  -# Layers
  <!-- ko foreach: layers -->
  .box.w80{ko(:visible => '$data == $root.currentLayer()'), :style => 'display:none'}
    %p
      = label_tag :name
      %br/
      = ko_text_field_tag :name, :hasfocus => :hasFocus
      = ko_check_box_tag :public
      = label_tag :public, 'Public layer'

    %label Fields
    %br/
    %br/

    -# Fields
    #form-editor
      .left
        <!-- ko foreach: fields -->
        .feditor{ko(:css => '{first: $data == $parent.fields()[0]}', :click => '$root.selectField')}
          .feditor-top
          .feditor-container
            .rightbuttons
              %button.fdelete{ko(:click => "$root.deleteField")}
            .feditor-button
              %button{ko(:attr => "{'class': buttonClass()}", :css => "{active: $data == $root.currentField()}")}
            .feditor-content
              %h1{ko(:text => :name)}
              %span.hint{ko(:text => "'Code: ' + (code() ? code() : '(none)')")}
          .feditor-bottom
        <!-- /ko -->

        .feditor-add
          .feditor-add-top{ko(:css => '{empty: fields().length == 0}')}
          .feditor-add-container
            .feditor-add-content
              %h1 Add form field
              %span{ko(:click => '$root.newTextField')}
                %button.ltext
                %br/
                Text
              %span{ko(:click => '$root.newNumericField')}
                %button.lnumber
                %br/
                Numeric
              %span{ko(:click => '$root.newSelectOneField')}
                %button.lsingleoption
                %br/
                Select one
              %span{ko(:click => '$root.newSelectManyField')}
                %button.lmultipleoptions
                %br/
                Select many

      .box.right.w30.feditor-sidebar{ko(:with => '$root.currentField', :visible => '$root.currentField')}
        %p.title Type
        %p.smalltext The data type to fill in this field.
        = select_tag :kind, options_for_select([['Text', 'text'], ['Numeric', 'numeric'], ['Select one', 'selectOne'], ['Select many', 'selectMany']]), 'data-bind' => kov(:value => :kind)
        %hr/
        %p.title Name
        %p.smalltext The name of this field as it is presented.
        = ko_text_field_tag :name, :hasfocus => :hasFocus
        %hr/
        %p.title Code
        %p.smalltext The abbreviation used to report via SMS.
        = ko_text_field_tag :code
        <!-- ko if: isOptionsKind -->
        %hr/
        %p.title Options
        %p.smalltext Possible values for this field.
        %ul.clist.w30
          <!-- ko foreach: options -->
          %li
            %input.ux-clist{ko(:value => :name, :valueUpdate => "'afterkeydown'", :event => '{blur: $root.optionBlur}'), :type => :text}
            %button.clist-remove{ko(:click => '$root.removeOption')}
          <!-- /ko -->
          %li
            %input.ux-text{ko(:value => '$root.newOption', :valueUpdate => "'afterkeydown'", :event => '{keypress: $root.newOptionKeyPress, blur: $root.addOption}'), :placeholder => "New option"}
            %button.clist-add{ko(:click => '$root.addOption', :enable => '$root.optionValid')}
        <!-- /ko -->
        %br/
        %br/

      .clear

    %hr/
    .bottom-actions
      %button.white{ko(:click => '$root.saveLayer', :enable => :valid), :type => :button} Save
      %a.tgrey{ko(:click => '$root.cancelLayer'), :href => 'javascript:void(0)'} Cancel

  .box.grey.w60{ko(:visible => '$data != $root.currentLayer()'), :style => 'display:none'}
    .toptitle
      %span{ko(:text => :name)}
      &rarr;
      %em{ko(:visible => :public)} Public layer
      %em{ko(:visible => '!public()')} Private layer

    .rightbuttons
      %button.fbranch
      %button.fdelete{ko(:click => '$root.deleteLayer')}

    .middlebuttons
      <!-- ko foreach: fields -->
      %button.faccept{ko(:text => :name)}
      <!-- /ko -->

    %button.farrow{ko(:click => '$root.editLayer')} Edit

  %br/
  <!-- /ko -->

  -# New layer link
  .box.grey.addlayer{ko(:visible => '!currentLayer()', :click => '$root.newLayer'), :style => 'display:none'}
    %span Add layer
    %button.cadd.right{:type => :button}
    %br{:clear => :all}
