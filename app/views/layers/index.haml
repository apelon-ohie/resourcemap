- content_for :head do
  :css
    .error { color: red; }

= render '/tabs'

-# Hierarchy item template
%script{type: "text/html", id: "hierarchy-items-template"}
  %div
    %a{ko(click: :toggleExpand, style: {marginLeft: "'' + (level() * 20) + 'px'"}), href: 'javascript:void(0)'}
      %img{ko(attr: {src: "'#{InsteddRails.url}/theme/images/icons/18/black/folder' + (expanded() ? '_open' : '') + '.png'"}), style: 'position:relative;top:2px'}
      %span{ko(text: :name)}
    /ko if: expanded
    /ko template: {name: 'hierarchy-items-template', foreach: hierarchyItems}
    //ko
    //ko

.tabsline
  #layers-main.hidden-until-loaded
    %h2 Layers
    %p Manage layers and fields of this collection's sites

    - if !current_user_snapshot.at_present?
      = render '/current_snapshot_message'

    %br/
    -# Layers
    /ko foreach: layers
    /ko if: $data == $root.currentLayer()
    .box.w80
      %p{style: 'margin-top:0px;'}
        %label{ko(css: {error: :nameError}), :for => :name} Name
        %br/
        %br/
        = ko_text_field_tag :name, hasfocus: :hasFocus, css: {error: :nameError, w30: true}

      %label{ko(css: {error: :fieldsError})} Fields
      %br/
      %br/

      -# Fields
      #form-editor
        .left
          /ko foreach: fields
          .feditor{ko(css: {first: '$data == $parent.fields()[0]'}, click: '$root.selectField')}
            .feditor-top
            .feditor-container
              .rightbuttons{style:'width:250px;'}
                %button.fdelete{ko(click: "$root.deleteField"), style:'margin-top:0px;float:right;', title: 'Remove field'}
                .btupdn{style: 'float:right;'}
                  %button.fmoveup{ko(click: '$root.moveFieldUp', attr: {disabled: '$root.isFirstField($parent, $data)'}, css: {disabled: '$root.isFirstField($parent, $data)'}), style: 'margin-top:0', title: 'Move field up'}
                  %button.fmovedown{ko(click: '$root.moveFieldDown', attr: {disabled: '$root.isLastField($parent, $data)'}, css: {disabled: '$root.isLastField($parent, $data)'}), title: 'Move field down'}
                .change_layer{style:'float:right;position:relative;top:4px;width:180px;'}
                  %a{ko(click: 'selectingLayerClick', attr: '{id: name}'), style: 'float:right', href: '#'} Move to layer...
                  = select_tag :layer, nil, 'data-bind' => kov(attr: '{id: name}', options: '$root.layers()', optionsText: 'function(item) { return item.name() }', value: 'layer', event: '{ change: selectingLayerSelect }'), :style => "display: none; position:relative;float:right;"

              .feditor-button{style: 'margin-top:-5px;'}
                %button{ko(attr: {class: "buttonClass()"}, css: {active: "$data == $root.currentField()"}), title: 'Select field'}
              .feditor-content
                %h1{ko(text: :name)}
                -# This is to make the h1 occupy the vertical space even if no name is set yet
                /ko if: !name()
                %h1{style: 'visibility: hidden'}
                  invisible
                //ko
                %span.hint{ko(text: "'Code: ' + (code() ? code() : '(none)')")}

            .feditor-bottom

          //ko

          .feditor-add
            .feditor-add-top{ko(css: {empty: 'fields().length == 0'})}
            .feditor-add-container
              .feditor-add-content
                %h1 Add form field
                - Field::BaseKinds.clone.concat(Field::plugin_kinds.map{|k,v| v}).in_groups_of(6).each do |field_row|
                  .feditor-field-type-row
                  - field_row.each do |field|
                    - if field
                      %span{ko(click: "function() { $root.newField('#{field[:name]}') }")}
                        %button{ style: "margin-left:10px; margin-bottom:4px;", class: field[:css_class], title: "Add new #{field[:name].titleize.downcase} field" }
                        %br/
                        = field[:name].titleize
                  %br/
                  %br/

        = render 'layers/field_editor'

      %hr/
      - if current_user_snapshot.at_present?
        .bottom-actions
          / ko if: $root.savingLayer()
          Saving layer, please wait...
          / /ko
          / ko if: !$root.savingLayer()
          %button.white{ko(click: '$root.saveLayer', enable: :valid), type: :button, title: 'Save layer'} Save layer
          %a.tgrey{ko(click: '$root.cancelLayer'), href: 'javascript:void(0)'} Cancel
          / /ko
          / ko if: !valid()
          %span{ko(text: "'Can\\'t save: ' + error()"), style: 'color:red;margin-left:20px'}
          / /ko
    //ko

    /ko if: $data != $root.currentLayer()
    .box.grey.w60
      .toptitle
        %span{ko(text: :name)}
        -#&rarr;
        -#%em{ko(visible: :public)} Public layer
        -#%em{ko(visible: '!public()')} Private layer

      - if current_user_snapshot.at_present?
        .rightbuttons
          / ko if: !$root.savingLayer() && !$root.currentLayer()
          .btupdn
            %button.fmoveup{ko(click: '$root.moveLayerUp', attr: {disabled: '$root.isFirstLayer($data)'}, css: {disabled: '$root.isFirstLayer($data)'}), title: 'Move layer up'}
            %button.fmovedown{ko(click: '$root.moveLayerDown', attr: {disabled: '$root.isLastLayer($data)'}, css: {disabled: '$root.isLastLayer($data)'}), title: 'Move layer down'}
          / /ko
          / ko if: !$root.savingLayer() && !$root.currentLayer()
          - if current_user_snapshot.at_present? && collection_admin?
            %button.fdelete{ko(click: '$root.deleteLayer'), title: 'Remove layer'}
          / /ko

      .middlebuttons
        /ko foreach: fields
        %div{ko(attr: {class: 'iconClass()'}, text: :name), :style => 'line-height:21px;color:black;'}
        //ko

      - if current_user_snapshot.at_present? && collection_admin?
        /ko if: !$root.savingLayer()
        %button.farrow{ko(click: '$root.editLayer'), style:'margin-bottom:0px;margin-top:0px', title: 'Edit layer'} Edit
        //ko
    //ko

    %br/
    //ko

    - if current_user_snapshot.at_present? && collection_admin?
      /ko if: !savingLayer()
      -# New layer link
      .box.grey.add{ko(visible: '!currentLayer()', click: 'newLayer'), style: 'display:none;'}
        %span{style:'padding-top:6px;'}
          = 'Add layer'
        %button.cadd.right{type: :button, style: 'margin-top:3px;margin-right:0px;', title: 'Add new layer'}
        %br{clear: :all}
      //ko
