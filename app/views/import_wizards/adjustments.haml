:css
  .ignored, .ignored input, .ignored select { color: grey; }

:javascript
  window.kinds = #{Field::kinds}

= render '/tabs'

.tabsline
  %h2 Import wizard
  %p Now specify how to map each column to a field.
  %br/

  - if current_user_snapshot.at_present?
    = render 'steps', :step => 2
  - else
    = render '/current_snapshot_message'
    %br

  %h2.loading Curate Data
  %p Specify how to map each column to a field

  #generating_preview.grey
    We are generating a preview for the sites you are importing.
    %br
    Then you will be able to define how to use each column.
    %br
    This may take a while depending on the size of your file.

  #import-wizard-main.hidden-until-loaded
    /ko if: !hasId()
    - if collection.sites.exists?
      .info-box.flash_error.drop_shadow
        = raw "All sites will be imported as new. If you want to modify the existing ones, follow the instructions in the #{link_to "previous page", :back, :class => 'black', :style => 'text-decoration:underline'}."
      %br
    //ko

    /ko if: (validationErrors() && validationErrors().hasErrors())
    .box.error_description
      %h2 Resolve these conflicts in order to complete the upload
      %ul
        / ko foreach: validationErrors().summarizedErrorList()
        %li
          %span{ko(text: 'description')}
          .moreInfo{ko(text: 'more_info')}
        //ko
    %br
    //ko
    .show_column_options
      Show columns:
      %input#all-columns{ko(click: 'showAllColumns', checked: 'showingColumns'), type: :radio, value: 'all'}
      %label{:for => 'all-columns'} all
      %input#new-columns{ko(click: 'showNewColumns', checked: 'showingColumns'), type: :radio, value: 'new'}
      %label{:for => 'new-columns'} new
      %input#existing-columns{ko(click: 'showExistingColumns', checked: 'showingColumns'), type: :radio, value: 'existing'}
      %label{:for => 'existing-columns'} existing
      %input#columns-with-errors{ko(click: 'showColumnsWithErrors', checked: 'showingColumns'), type: :radio, value: 'with_errors'}
      %label{:for => 'columns-with-errors'} with errors

    %br

    .box.nopadd#preview
      .tablescroll{style: 'margin-top: 0'}
        %table.GralTable.fht-table.fht-table-init{style: 'table-layout: fixed;'}
          %colgroup
            / ko foreach: visibleColumns()
            %col{width: '150px'}
            //ko
          %thead
            %tr
              / ko foreach: visibleColumns()
              %th
                %a.fancybox.column_header.icon_button{ko(css: {error_column: 'errors().length > 0'}, class: 'iconClass', text: :header, click: '$root.selectColumn'), href: '#columnUsageTemplate'}
              //ko
          %tbody
            / ko foreach: visibleSites()
            %tr
              / ko foreach: siteColumns
              %td{ko(css: {error: 'error'}, text: 'value', attr: { error: 'error' } ) }
              //ko
              //ko
            //ko

    = render 'import_wizards/adjusments/column_usage_template'


    %br/
    Showing first 10 records.
    %br/
    /ko if: importing()
    Importing, please wait. This might take several minutes.
    //ko
    /ko if: importError()
    %span{style: 'color:red'} Sorry, something failed during the import. Please contact InSTEDD for support.
    //ko
    /ko if: !importing() && !importError()
    /ko if: !validationErrors() || (validationErrors() && !validationErrors().hasErrors())
    %button.grey{ko(click: :startImport)} Start importing
    //ko
    /ko if: (validationErrors() && validationErrors().hasErrors())
    %span.error Fix the errors to start importing
    //ko
    //ko
