:css
  .ignored, .ignored input, .ignored select { color: grey; }
  .error, .error_column { color: red; }

= render '/tabs'

.tabsline
  %h2 Import wizard
  %p Now specify how to map each column to a field.
  %br/

  - if current_snapshot
    = render '/current_snapshot_message'
  - else
    = render 'steps', :step => 2
    %br

  %h2.loading Curate Data
  %p Specify how to map each column to a field

  #generating_preview.grey
    We are generating a preview for the sites you are importing.
    %br
    Then you will be able to define how to use each column.
    %br
    This may take a while depending on the size of your file.

  #import-wizard-main.hidden-until-loaded
    /ko if: !hasId()
    - if collection.sites.exists?
      .alert.box.flash_error.drop_shadow
        = raw "All sites will be imported as new. If you want to modify the existing ones #{link_to "go back", :back, :class => 'black'} to the previous page."
    //ko


    .box.nopadd.h50
      .tablescroll{style: 'margin-top: 0'}
        %table.GralTable.fht-table.fht-table-init{style: 'table-layout: fixed;'}
          %colgroup
            / ko foreach: columns()
            %col{width: '150px'}
            //ko
          %thead
            %tr
              / ko foreach: columns()
              %th
                %a.fancybox.column_header.icon_button{ko(css: {error_column: 'error().length > 0'}, attr: {error: 'error'}, class: 'iconClass', text: :name, click: '$root.selectColumn'), href: '#columnUsageTemplate'}
              //ko
          %tbody
            / ko foreach: sites()
            %tr
              / ko foreach: $data
              %td{ko(css: {error: 'error'}, text: 'value', attr: { error: 'error' } ) }
              //ko
              //ko
            //ko

    #columnUsageTemplate{ko(with: :selectedColumn), style:'display: none;'}
      %h2
        %span{ko(text: 'name')}
        Column Settings
      %hr
      %div{ko(css: {ignored: "usage() == 'ignore' || usage() == 'id'"})}
        %div
          /ko if: usage() == 'id'
          - content = "Internal ResourceMap ID"
          //ko
          /ko if: usage() != 'id'
          - if collection_admin?
            - content = 'import_wizards/adjusments/usage_options_for_admin'
          - else
            - content = 'import_wizards/adjusments/usage_options_for_non_admin'
          //ko
          = render 'import_wizards/adjusments/popup_row', :label => 'Use as:', :content => content
          /ko if: usage() == 'existing_field'
          = render 'import_wizards/adjusments/popup_row', :label => 'Layer:', :content => 'import_wizards/adjusments/existing_layer_options'
          = render 'import_wizards/adjusments/popup_row', :label => 'Field:', :content => 'import_wizards/adjusments/existing_field_options'
          //ko
          /ko if: usage() == 'new_field'
          = render 'import_wizards/adjusments/popup_row', :label => 'Field Code:', :content => 'import_wizards/adjusments/new_field_code'
          = render 'import_wizards/adjusments/popup_row', :label => 'Field Name:', :content => 'import_wizards/adjusments/new_field_name'
          //ko
        %div
          /ko if: usage() == 'new_field'
          %label Field Type:
          %div
            - i = 0
            - Field::Kinds.delete_if{|e| e == "hierarchy"}.each do |field_name|
              - i = i+1
              %span.field_option.left{ko(click: "function() { kind('#{field_name}') }"), style: "width: 25%;"}
                %button.icon_button{ko(css: {active: "kind() == '#{field_name}'"}), class: "f#{field_name}"}
                  = field_name.titleize
              - if i == 4
                %br
            .clear
          /ko if: kind() == 'select_one' || kind() == 'select_many'
          .box.alert
            Please select what you want to update with this input:
            %br
            - [['Option code', 'code'], ['Option label', 'label'], ['Both the code and label', 'both']].each do |option|
              = radio_button_tag 'select_kind_group', option[1], false, 'data-bind' => kov(checked: 'selectKind')
              = label_tag "select_kind_group_#{option[1]}", option[0]
          //ko
          //ko

    %br/
    /ko if: importing()
    Importing, please wait. This might take several minutes.
    //ko
    /ko if: importError()
    %span{style: 'color:red'} Sorry, something failed during the import. Please contact InSTEDD for support.
    //ko
    /ko if: !importing() && !importError()
    /ko if: valid()
    %button.grey{ko(click: :startImport)} Start importing
    //ko
    /ko if: !valid()
    %span.error Fix the errors to start importing
    //ko
    //ko
