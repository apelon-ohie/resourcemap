- content_for :head do
  = javascript_include_tag 'view_models/thresholds_view_model'
  = javascript_include_tag 'maps/thresholds_map'

  :javascript
    function createColorPicker(threshold){
      $('.stat').ColorPicker({
        color: '#0000ff',
          //animation show 
          onShow: function (colpkr) {
            $(colpkr).fadeIn(500);
              return false;
          },
          //animation hide
          onHide: function (colpkr) {
            $(colpkr).fadeOut(500);
              return false;
          },
          onChange: function (hsb, hex, rgb) {
            threshold.color('#' + hex);
          }
         });
    };
    
    function buildColorPicker(th){
      createColorPicker(th); 
    };

    $(function() {
      rm.set({ collection_id: #{collection.id} });
      rm.bootstrap(); 
    });
       
= render 'collections/tabs'

.tabsline
  %h2 Thresholds
  <!-- ko foreach :thresholds -->
  <!-- ko if: $data != $root.currentThreshold() -->
  .box.grey.w60
    .toptitle 
      .ord-buttons
        %input{ ko(value: :priority) }
        %button.up{ ko(click: '$root.moveThresholdUp'), title: 'Move up' }
        %button.down{ ko(click: '$root.moveThresholdDown'), title: 'Move down' }
      %span
        <!-- ko foreach :conditions --> 
        <!-- ko if: $parent.isFirstCondition($data) --> 
        When
        <!-- /ko -->
        <!-- ko if: !$parent.isFirstCondition($data) --> 
        and
        <!-- /ko -->
        %span{ ko(text: '$root.getField(field()).name') }
        %span{ ko(text: :comparison) }
        %span{ ko(text: :value) }
        <!-- /ko --> 
        &rarr; set color
        %span.stat{"data-bind" => "style: { backgroundColor:color }" }

    .rightbuttons 
      %button.fdelete{ ko(click: '$root.deleteThreshold') }

    %button.farrow{ ko(click: '$root.editThreshold') } Edit
  <!-- /ko -->

  -# Form editor
  <!-- ko if: $data == $root.currentThreshold() -->
  .box.w60
    .rightbuttons
      %button.fdelete
    %label Conditions
    .middlebuttons
      %span
      <!-- ko foreach :conditions --> 
      <!-- ko if: $parent.isFirstCondition($data) --> 
      When
      <!-- /ko -->
      <!-- ko if: !$parent.isFirstCondition($data) --> 
      %br
      And
      <!-- /ko -->
      %select{ ko(options: '$root.fields', optionsText: "'name'", optionsValue: "'code'", value: :field) }
      %select{ ko(options: '$root.getField($data.field()).comparisonOptions', optionsText: "'value'", optionsValue: "'key'", value: :is) }
      %select{ ko(options: :types, optionsText: "'value'", optionsValue:"'key'", value: :type) }
      %span.ux-nstep.w06 
        %input{ ko(value: :rawValue), type: :text }
      <!-- ko if: $parent.isLastCondition($data) --> 
      set color
      %span.stat{ ko(style: { backgroundColor: '$parent.color' }, click: 'buildColorPicker') }
      <!-- /ko -->
      %button.premove    
      <!-- /ko --> 
    %button.fadd{ko(click: '$root.addCondition') }
      Add new condition
    %hr
    .bottom-actions
      %button.white{ ko(click: '$root.saveThreshold') } Save
      %a.tgrey{ ko(click: '$root.cancelThreshold'), href: 'javascript:void(0)' } Cancel
  <!-- /ko -->
      
  %br/
  <!-- /ko --> 

  -# New threshold link
  .box.grey.add{ ko(visible: 'state() == "listing"', click: 'showAddThreshold'), style: 'display:none'}
    %span
      Add threshold
    %button.cadd.right
    %br{clear: :all}
