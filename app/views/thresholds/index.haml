= render 'collections/tabs'

.tabsline
  #thresholds-main.hidden-until-loaded{ ko(css: { ready: :isReady }) }
    %h2 Thresholds
    <!-- ko foreach :thresholds -->
    <!-- ko if: $data != $root.currentThreshold() -->
    .box.grey.w60
      .toptitle
        .ord-buttons
          -#%input{ ko(value: :priority) }
          -#%button.up{ ko(click: '$root.moveThresholdUp'), title: 'Move up' }
          -#%button.down{ ko(click: '$root.moveThresholdDown'), title: 'Move down' }
        %span
          <!-- ko foreach :conditions -->
          <!-- ko if: $parent.isFirstCondition($data) -->
          When
          <!-- /ko -->
          <!-- ko if: !$parent.isFirstCondition($data) -->
          and
          <!-- /ko -->
          %span{ ko(text: 'field().name()') }
          %span{ ko(text: 'op().label()') }
          %span{ ko(text: 'formattedValue') }
          <!-- /ko -->
          &rarr; set color
          %span.stat{"data-bind" => "style: { backgroundColor:color }" }

      .rightbuttons
        %button.fdelete{ ko(click: '$root.deleteThreshold') }

      %button.farrow{ ko(click: '$root.editThreshold') } Edit
    <!-- /ko -->

    -# Form editor
    <!-- ko if: $data == $root.currentThreshold() -->
    .box.w90
      .rightbuttons
        -#%button.fdelete{ ko(visible: '!isNewRecord') }
      %label Conditions
      .middlebuttons
        %span
        <!-- ko foreach :conditions -->
        <!--    ko if: $parent.isFirstCondition($data) -->
        When
        <!--    /ko -->
        <!--    ko if: !$parent.isFirstCondition($data) -->
        %br
        And
        <!--    /ko -->
        %select{ ko(options: '$root.fields', optionsText: "'name'", value: :field, hasfocus: true) }
        <!--    ko if: field().operators().length == 1 -->
        %span{ ko(text: 'field().operators()[0].label') }
        %select{ ko(options: 'field().options', optionsText: "'label'", optionsValue:"'id'", value: :value) }
        <!--    /ko -->
        <!--    ko if: field().operators().length > 1 -->
        %select{ ko(options: 'field().operators', optionsText: "'label'", value: :op) }
        %select{ ko(options: 'ValueType.ALL', optionsText: "'label'", value: :valueType) }
        %label{ ko(css: { error: '!valid()' }) }
        %span.w06
          %input{ ko(value: :value, valueUpdate: :afterkeydown, css: { error: '!valid()' }), type: :text, style: 'width:60px' }
        <!--    /ko -->
        <!--    ko if: $parent.isLastCondition($data) -->
        set color
        %input{ ko(colorPicker: '$parent.color'), type: :text }
        <!--    /ko -->
        %button.premove{ ko(click: '$parent.removeCondition') }
        <!-- /ko -->
      %button.fadd{ko(click: :addNewCondition) }
        Add new condition
      %hr
      .bottom-actions
        %button.white{ ko(click: '$root.saveThreshold', enable: :valid) } Save
        %a.tgrey{ ko(click: '$root.cancelThreshold'), href: 'javascript:void(0)' } Cancel
        <!-- ko if: !valid() -->
        %span{ ko(text: "'Can\\'t save: ' + error()"), style: 'color:red;margin-left:20px' } Can't save
        <!-- /ko -->
    <!-- /ko -->

    %br/
    <!-- /ko -->

    <!-- ko if: fields().length == 0 -->
    Please
    %strong add Layers
    first before managing your thresholds.
    <!-- /ko -->

    -# New threshold link
    <!-- ko if: fields().length -->
    .box.grey.add{ ko(visible: '!currentThreshold()', click: 'addThreshold'), style: 'display:none'}
      %span
        Add threshold
      %button.cadd.right
      %br{clear: :all}
    <!-- /ko -->
    <!-- /ko -->

    -# New threshold link
    <!-- ko if: fields().length -->
    .box.grey.add{ ko(visible: 'state() == "listing"', click: 'showAddThreshold'), style: 'display:none'}
      %span
        Add threshold
      %button.cadd.right
      %br{clear: :all}
    <!-- /ko -->
