- content_for :head do
  = javascript_include_tag 'view_models/thresholds_view_model'
  = javascript_include_tag 'maps/thresholds_map'

  :javascript
    $(function() { 
      rm.set({ collection_id: #{collection.id} });
      rm.bootstrap();
    });

= render 'collections/tabs'

.tabsline
  -# Thresholds
  <!-- ko foreach :thresholds -->
  .box.grey.w60
    .toptitle 
      .ux-spinner
        %input{ ko(value: :priority), type: :hidden }
        %button.kup{ ko(click: '$root.increasePriority') }
        %button.kdown{ ko(click: '$root.decreasePriority') }
      %span
        When
        %span{ ko(text: :field) }
        is
        %span{ ko(text: :comparison) }
        %span{ ko(text: :value) }
        , set color
        %span.stat{ ko(style: {backgroundColor: :color, borderTop: :borderTopStyle}) }
    .rightbuttons 
      %button.fdelete{ ko(click: '$root.deleteThreshold') }
    .middlebuttons
    %button.farrow Edit
  %br
  <!-- /ko -->
  .box.w60
    .rightbuttons
      %button.fdelete
    %label Conditions
    .middlebuttons
      when 
      %select  
        %option beds
      %select
        %option is less than
      %select
        %option a value of
      %span.ux-nstep.w06 
        %input{:size => "2", :type => "text", :value => "10:00"}
        %button.kdown{:type => "button"}
        %button.kup{:type => "button"}
      %button.premove 
    .middlebuttons
      %select
        %option Or
      %select  
        %option Ocupation
      %select
        %option is more than
      %select
        %option a percent of
      %span.ux-nstep.w06 
        %input{:size => "2", :type => "text", :value => "15:00"}
        %button.kdown{:type => "button"}
        %button.kup{:type => "button"}
      %span.stat-r
      %button.fremove 
    %button.fadd
      Add new condition

  -# New threshold link
  .box.grey.add{ ko(visible: 'state() == "listing"'), style: 'display:none' }
    %span Add threshold
    %button.cadd.right{type: :button}
    %br{clear: :all}
