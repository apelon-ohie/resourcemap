- content_for :head do
  = javascript_include_tag 'view_models/thresholds_view_model'
  = javascript_include_tag 'maps/thresholds_map'

  :javascript
    $(function() { 
      rm.set({ collection_id: #{collection.id} });
      rm.bootstrap();
    });

= render 'collections/tabs'

.tabsline
  %h2 Thresholds
  <!-- ko foreach :thresholds -->
  .box.grey.w60{ ko(visible: '$data != $root.currentThreshold()') }
    .toptitle 
      .ux-spinner
        %input{ ko(value: :priority), type: :hidden }
        %button.kup{ ko(click: '$root.increasePriority') }
        %button.kdown{ ko(click: '$root.decreasePriority') }
      %span
        When
        %span{ ko(text: :field) }
        is
        %span{ ko(text: :comparison) }
        %span{ ko(text: :value) }
        , set color
        %span.stat{ ko(style: {backgroundColor: :color, borderTop: :borderTopStyle}) }
    .rightbuttons 
      %button.fdelete{ ko(click: '$root.deleteThreshold') }
    .middlebuttons
    %button.farrow Edit
  %br{ ko({visible: :id}) }
  
  
  .box.w60{ ko(visible: '$data == $root.currentThreshold()') }
    .rightbuttons
      %button.fdelete
    %label Conditions
    .middlebuttons
      when
      %select{ko(options: "$root.fieldsOption", value: 'condition().field')}
      %select{"data-bind" => "options: $root.comparisonsOption, value: comp , optionsText: 'comparison_value'"}
      %select{ko(options: "$root.ofOption", value: :valueOforPercentOf)}
      %span.ux-nstep.w06 
        %input{ko(value: 'condition().value'), style: ":size => '2', :type => 'text'"}
        %button.kdown{:type => "button"}
        %button.kup{:type => "button"}
      %span.stat-r{ko(value: :color)}
      %button.premove 
    .middlebuttons
      %select
        %option Or
      %select  
        %option Ocupation
      %select
        %option is more than
      %select
        %option a percent of
      %span.ux-nstep.w06 
        %input{:size => "2", :type => "text", :value => "15"}
        %button.kdown{:type => "button"}
        %button.kup{:type => "button"}
      %span.stat-r
      %button.fremove 
    %button.fadd
      Add new condition

    %hr
    .bottom-actions
      %button.white{ko(click: "$root.addThreshold")}
        Save
      %a.tgrey
        Cancel
  <!-- /ko --> 
  %br 
  .box.w60.grey.addlayer{ko(click: "showAddThreshold")}
    %span
      Add threshold
    %button.cadd.right
    %br.clear.all
