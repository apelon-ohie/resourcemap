= render 'tabs'

- content_for :head do
  = javascript_include_tag 'view_models/thresholds_view_model'
  = javascript_include_tag 'maps/thresholds_map'

  :javascript
    $(function() { 
      rm.set({ collection_id: #{collection.id} });
      rm.bootstrap();
    });

.tabsline
  %h2 Thresholds
  <!-- ko foreach :thresholds -->
  .box.grey.w60
    .toptitle 
      .ux-nstep.w06
        %input{:disabled => "disabled", :type => "text", :STYLE => "width:12px"}
        %button.kdown{:type => "button"}
        %button.kup{:type => "button"}
      %span
        When
        %span{ ko(text: :field) }
        is
        %span{ ko(text: :comparison) }
        %span{ ko(text: :value) }
        , set color
        %span.stat{ ko(style: {backgroundColor: :color, borderTop: :borderTopStyle}) }
    .rightbuttons 
      %button.fdelete
    .middlebuttons
    %button.farrow Edit
  %br
  <!-- /ko -->
  .box.w60{ ko({visible: :stat}) }
    .rightbuttons
      %button.fdelete
    %label Conditions
    .middlebuttons
      when 
      %select{"data-bind" => "options: $root.fieldsOption, value: fields, optionsText: 'field'"} 
      %select{"data-bind" => "options: $root.conditionsOption, value: conditions, optionsText: 'condition'"}
      %select{"data-bind" => "options: $root.comparesOption, value: compares, optionsText: 'compare'"}
      %span.ux-nstep.w06 
        %input{"data-bind" => "value: values, valueUpdate: 'keydown'", :size => "2", :type => "text"}
        %button.kdown{:type => "button"}
        %button.kup{:type => "button"}
      %span.stat-r{"data-bind" => "value: colors"}
      %button.premove 
    .middlebuttons
      %select
        %option Or
      %select  
        %option Ocupation
      %select
        %option is more than
      %select
        %option a percent of
      %span.ux-nstep.w06 
        %input{:size => "2", :type => "text", :value => "15"}
        %button.kdown{:type => "button"}
        %button.kup{:type => "button"}
      %span.stat-r
      %button.fremove 
    %button.fadd
      Add new condition

    %hr
    .bottom-actions
      %button.white{ko(click: "addThreshold")}
        Save
      %a.tgrey
        Cancel
  .box.grey.addlayer{ko(click: "showAddThreshold")}
    %span
      Add threshold
    %button.cadd.right
    %br.clear.all
