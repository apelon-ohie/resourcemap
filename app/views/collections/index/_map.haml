.left.panel{ko(css: { wp30: '!expandLeftColumn()', wp50: 'expandLeftColumn()' })}
  <!-- ko if: !loadingSite() -->

  -# Collections
  <!-- ko if: !currentCollection() && !editingSite() -->
  .tableheader
    .title My Collections
  .tablescroll.cheight.sites
    %table.GralTable.CleanTable
      %tbody
        <!-- ko foreach: collections -->
        %tr
          %td
            %input{ko(checked: :checked), type: :checkbox}
            %a{ko(text: :name, attr: {title: :name}, click: '$root.enterCollection')}"
            <!-- ko if: currentSnapshot -->
            .snapshot_on.right
              .i18g-snapshot
              %button.farrow{ko(click: '$root.enterCollection'), type: :button}
            .clear
            <!-- /ko -->
            <!-- ko if: !currentSnapshot -->
            %button.farrow{ko(click: '$root.enterCollection'), type: :button}
            <!-- /ko -->
        <!-- /ko -->
    %br{:clear => "all"}/
    - if Settings.is_on? :account_completeness
      -# acount completeness
      #profile-main{style: 'display:none'}
        .box.plain.orange{ko(visible: 'collections().length < 1 || (!$root.isExist())')}
          .sbox.grey.StateDisplay
            .values

              <!-- ko if: collections().length < 1 && (!$root.isExist()) -->
              .M
                %span.Fill/
              .R
                %span 0% Account Setup Completeness
              <!-- /ko -->

              <!-- ko if: (collections().length < 1 && $root.isExist()) || (collections().length > 0 && (!$root.isExist()))-->
              .M
                %span.Fill/
              .R
                %span 50% Account Setup Completeness
              <!-- /ko -->
              .L
                <!-- ko if: collections().length < 1 -->
                %button.fadd{ko(click: '$root.createCollection'),type: "button"}
                  %span Create Your First Collection (+50%)
                %br{:clear => "all"}/
                <!-- /ko -->
                <!-- ko if: !$root.isExist() -->
                %button.fadd{onClick: "window.location='/gateways';return false;", type: "button"}
                  %span Configure SMS Gateway (+50%)
                <!-- /ko -->


  - if can? :create, Collection
    .tablebottom{ko(click: '$root.createCollection')}
      %button.cadd{type: "button"}
      %span.createCollection Create Collection
  <!-- /ko -->

  -# Collection sites
  <!-- ko if: !editingSite() -->
  <!-- ko with: currentCollection -->
  .tableheader
    .title
      - if can? :index, Collection
        %button.pback{ko(click: '$root.goToRoot'), type: 'button', style: "#{if current_user.is_guest then 'visibility: hidden;margin-left: -20px;' end}"}
      %span{ko(text: :name, attr: {title: :name})}
      - #if can? :show, collection
      - if !current_user.is_guest
        %button.fconfiguration.right{ko(click: '$root.editCollection'), type: 'button'}

  .tablescroll.cheight.sites
    %table.GralTable.CleanTable
      %tbody
        <!-- ko if: !isSearch() && $root.groupBy().esCode != '' -->
        <!-- ko template: {name: 'map-hierarchy-items-template', with: $data} -->
        <!-- /ko -->
        <!-- /ko -->
        <!-- ko template: {name: 'map-sites-template', with: $data} -->
        <!-- /ko -->
        <!-- ko if: hasMoreSites() && !loadingSites()-->
        %tr
          %td.loadmore
            = ko_link_to "Load more sites...", :loadMoreSites
        <!-- /ko -->
        <!-- ko if: hasMoreSites() && loadingSites()-->
        %tr
          %td.loadmore Loading...
        <!-- /ko -->
  .tablebottom
    <!-- ko if: !currentSnapshot-->
    -# if can? :create, Site
    - if current_user && !current_user.is_guest
      %button.flocation{ko(click: '$root.createSite')} Create Site
    <!-- /ko -->

  <!-- /ko -->
  <!-- /ko -->

  -# New Site or Edit Site form
  <!-- ko if: newOrEditSite -->
  %form{ko(with: :newOrEditSite, submit: '$root.saveSite'), novalidate: 'novalidate', action: '#/null', method: :post}
    .tableheader{ko(css: { wp30: '!$root.expandLeftColumn()', wp70: '$root.expandLeftColumn()' })}
      %button.pback{ko(click: '$root.exitSite'), type: 'button'}
      %span
      <!-- ko if: inEditMode() -->
      %span{ko(text: :name)}
      <!-- /ko -->
      <!-- ko if: !inEditMode() -->
      %span New Site
      <!-- /ko -->
    .tablescroll.cheight
      %table
        %tbody
          %tr
            %td
              %div
                %span{ko(text: 'collection.nameFieldError', validationPopover: 'collection.nameFieldError'), style: 'display: none;'}
                = label_tag :name, "Name:"
                <!-- ko if: nameWriteable -->
                = text_field_tag :name, '', placeholder: 'Enter new site name',  'data-bind' => kov(value: :name, valueUpdate: :afterkeydown, hasfocus: true, event: {blur: :tryGeolocateName}, css: {error: 'collection.nameFieldError'}), :autofocus => true
                <!-- /ko -->
                <!-- ko if: !nameWriteable -->
                %span.value{ko(text: :name)}
                <!-- /ko -->


              %div
                %label Location:
                <!-- ko if: locationWriteable -->
                = ko_text_field_tag :locationText, event: {keydown: :newLocationKeyPress, blur: :moveLocation}, html: {class: 'ux-text', placeholder: 'Search or drag the pin'}
                <!-- /ko -->
                <!-- ko if: ! locationWriteable -->
                %span.value{ko(text: :locationText)}
                <!-- /ko -->


              / ko if: collection.readable($data)
              <!-- ko foreach: $root.currentCollection().layers() -->
              %div
                %img{ko(attr: {src: "'#{InsteddRails.url}/theme/images/icons/misc/grey/arrow' + (expanded() ? 'Down' : 'Right') + '.png'"}, click: :toggleExpand), style: "position:relative;top:1px;cursor:pointer", width: 11, height: 11}
                %span{ko(text: :name, click: :toggleExpand)}
              <!-- ko if: expanded() -->
              <!-- ko foreach: fields -->
              %div
                %span{ko(text: :errorMessage, validationPopover: :errorMessage), style: 'display: none;'}
                = label_tag '', '', ko(attr: {:for => :esCode}, text: "name + ':'")
                <!-- ko if: !writeable -->
                %span.value{ko(text: :valueUI)}
                <!-- /ko -->
                <!-- ko if: writeable -->
                - Field::kinds.each do |kind|
                  <!-- ko if: kind == '#{kind}' -->
                  = render partial: field_edit_view(kind), locals: { single_editing_mode: false }
                  <!-- /ko -->
                <!-- /ko -->
              <!-- /ko -->
              <!-- /ko -->
              <!-- /ko -->
              / /ko
    .tablebottom
      /ko if: collection.error()
      .left
        %label.error There are validation errors that prevent the site from being saved.
      //ko
      .right
        %button.grey{type: 'submit'} Done
        %span{ko(click: '$root.exitSite'), style: 'cursor:pointer'} Cancel
      .clear
  <!-- /ko -->

  -# Show Site form
  <!-- ko if: showSite -->
  %form{ko(with: :showSite, submit: '$root.saveSite'), action: '#/null', method: :post, novalidate: 'novalidate'}
    .tableheader
      %button.pback{ko(click: '$root.exitSite'), type: 'button'}
      %span
      %span{ko(text: :name)}
    .tablescroll.cheight
      %table
        %tbody
          %tr
            %td

              <!-- ko if: nameWriteable -->
              %div.site_row.writeable{ko(click: 'editName')}
                %label Name:
                %span.value{ko(text: :name, visible: '!editingName()')}
                <!-- ko if: editingName() -->
                = ko_text_field_tag :name, visible: 'editingName()', hasfocus: true, event: {keydown: :nameKeyPress, blur: :saveName}
                <!-- /ko -->
              <!-- /ko -->
              <!-- ko if: ! nameWriteable -->
              %div.site_row
                %label Name:
                %span.value{ko(text: :name)}
              <!-- /ko -->

              <!-- ko if: locationWriteable -->
              %div.site_row.writeable{ko(click: 'editLocation')}
                %label Location:
                <!-- ko if: !hasLocation() -->
                %span.value{ko(visible: '!editingLocation()')} (no value)
                <!-- /ko -->
                <!-- ko if: hasLocation() && !editingLocation() -->
                %span.value{ko(text: :locationText, visible: '!editingLocation()')}
                <!-- /ko -->
                <!-- ko if: editingLocation() -->
                = ko_text_field_tag :locationText, visible: :editingLocation, hasfocus: true, event: {keydown: :locationKeyPress, blur: :saveLocation}, html: {class: 'ux-text'}
                <!-- /ko -->
              <!-- /ko -->
              <!-- ko if: ! locationWriteable -->
              %div.site_row
                %label Location:
                %span.value{ko(text: :locationText)}
              <!-- /ko -->

              - if Settings.mobile_id?
                %div.site_row
                  %label ID With Prefix:
                  %span.value{ko(text: :idWithPrefix)}
              / ko if: collection.readable($data)
              <!-- ko foreach: collection.layers -->
              / col = collection
              %div.coldiv{ko(css: {coldiv: '!expanded()', expdiv: 'expanded()'}), style: 'margin-top:24px;margin-bottom:14px'}
                %span{ko(text: :name, click: :toggleExpand)}
              <!-- ko if: expanded() -->
              <!-- ko foreach: fields -->
              <!-- ko if: writeable -->
              %div.site_row.writeable{ko(click: 'edit')}
                %span{ko(text: :errorMessage, validationPopover: :errorMessage), style: 'display: none;'}
                %label.field-name{ko(text: 'name', topPopover: "'Field Code: ' + code", css: { error: :error })}
                <!-- ko if: hasValue() && !error() -->
                %span.value{ko(text: :valueUI, visible: '!editing()')}
                <!-- ko if: kind == 'site' && !editing() && !error() -->
                %button.farrow.right{ko(click: 'function(data, event) { $root.editSiteFromId(value(),$root.currentCollection().id) }', clickBubble: false), type: "button"}
                <!-- /ko -->
                <!-- /ko -->
                <!-- ko if: !hasValue() &&  !error() -->
                %span.value{ko(visible: '!editing()')} (no value)
                <!-- /ko -->
                <!-- ko if: editing() || error() -->
                - Field::kinds.each do |kind|
                  <!-- ko if: kind == '#{kind}' -->
                  = render partial: field_edit_view(kind), locals: { single_editing_mode: true }
                  <!-- /ko -->
                <!-- /ko -->
              <!-- /ko -->
              <!-- ko if: !writeable -->
              %div.site_row
                %span{ko(text: :errorMessage, validationPopover: :errorMessage), style: 'display: none;'}
                %label.field-name{ko(text: 'name', topPopover: "'Field Code: ' + code", css: { error: :error })}
                <!-- ko if: hasValue() && !error() -->
                %span.value{ko(text: :valueUI)}
                <!-- ko if: kind == 'site' && !editing() && !error() -->
                %button.farrow.right{ko(click: 'function(data, event) { $root.editSiteFromId(value(),$root.currentCollection().id) }'), type: "button"}
                <!-- /ko -->
                <!-- /ko -->
                <!-- ko if: !hasValue() &&  !error() -->
                %span.value (no value)
                <!-- /ko -->
                <!-- ko if: editing() || error() -->
                - Field::kinds.each do |kind|
                  <!-- ko if: kind == '#{kind}' -->
                  = render partial: field_edit_view(kind), locals: { single_editing_mode: true }
                  <!-- /ko -->
                <!-- /ko -->
              <!-- /ko -->
              <!-- /ko -->
              <!-- /ko -->
              <!-- /ko -->
              / /ko
    <!-- ko if: !$root.currentSnapshot() && $root.currentCollection().sitesPermission.canUpdate($root.showSite()) -->
    .tablebottom
      -# if (can? :edit, site)
      - if current_user && !current_user.is_guest
        = link_to 'Edit Site', 'javascript:void()', class: 'icon fedit black', 'data-bind' => kov(click: 'startEditMode')
        = link_to 'Delete Site', 'javascript:void()', class: 'icon fdelete black', 'data-bind' => kov(click: '$root.deleteSite')
    <!-- /ko -->

  <!-- /ko -->
  <!-- /ko -->

  -# Loading Site...
  %form{ko(visible: :loadingSite)}
    .tableheader.w30
      %button.pback
      %span
      %span Loading...
#right-panel.right.sites{ko(css: { wp70: '!expandLeftColumn()', wp50: 'expandLeftColumn()' })}
  .mapheader
    <!-- ko if: $root.currentCollection() -->
    = render 'collections/index/export'
    <!-- /ko -->
    %span{ko(text: :mapSitesCountText)}
    - if Settings.is_on? :alerts
      - Plugin.all.each do |plugin|
        = render_plugin_hook plugin, :map_header
    %button.icon_button.ffullscreen.right{ko(click: '$root.tooglefullscreen') }
    <!-- ko if: !editingSite() -->
    %button.icon_button.ftable.right{ko(click: '$root.showTable', css: {active: "!$root.showingMap()"})}
    %button.icon_button.fmap.right{ko(click: '$root.showMap', css: {active: "$root.showingMap()"})}
    <!-- /ko -->
    %br{clear: :all}
  %div.mapcontainer
    %button.icon_button.expand-collapse_button.oleftexpand{ko(click: '$root.toogleExpandFullScreen')}
    <!-- ko if: $root.shouldShowLocationMissingAlert() -->
    %a#sites_whitout_location_alert.alert.box.flash_error.drop_shadow(href='javascript:window.model.filterByLocationMissing()')
      %span There are sites with no location set
      %span.right
        %button.fconfiguration{ko(click: '$root.filterByLocationMissing'), type: 'button'}
        %span.black Show them
      .clear
    <!-- /ko -->
    #map.cheight


