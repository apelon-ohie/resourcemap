.left.w40.h50
  <!-- ko if: !loadingSite() -->

  -# Collections
  <!-- ko if: !currentCollection() && !editingSite() -->
  .tableheader.w40
    %div{style: 'padding-top:6px;padding-left:15px'} My Collections
  .tablescroll
    %table.GralTable.CleanTable
      %tbody
        <!-- ko foreach: collections -->
        %tr
          %td
            %div
              %input{ko(checked: :checked), type: :checkbox, style: 'position:relative;top:3px'}
              %span{ko(text: :name)}
            %button.farrow{ko(click: '$root.enterCollection'), type: :button}
        <!-- /ko -->
  .tablebottom{ko(click: '$root.createCollection'), style: 'cursor: pointer'}
    %button.cadd{type: "button"}
    %span.createCollection Create Collection
  <!-- /ko -->

  -# Collection sites
  <!-- ko if: !editingSite() -->
  <!-- ko with: currentCollection -->
  .tableheader.w40
    %button.pback{ko(click: '$root.goToRoot'), type: 'button'}
    %span.i18b-groupChat
    %span{ko(text: :name)}
    %button.fconfiguration.right{ko(click: '$root.editCollection'), type: 'button', style: 'margin-right:9px'}


  .tablescroll
    %table.GralTable.CleanTable
      %tbody
        <!-- ko if: !isSearch() && $root.groupBy().esCode != '' -->
        <!-- ko template: {name: 'map-hierarchy-items-template', with: $data} -->
        <!-- /ko -->
        <!-- /ko -->
        <!-- ko template: {name: 'map-sites-template', with: $data} -->
        <!-- /ko -->
        <!-- ko if: hasMoreSites() && !loadingSites()-->
        %tr
          %td.loadmore
            = ko_link_to "Load more sites...", :loadMoreSites, style: 'margin-left: 23px'
        <!-- /ko -->
        <!-- ko if: hasMoreSites() && loadingSites()-->
        %tr
          %td.loadmore Loading...
        <!-- /ko -->
  .tablebottom
    <!-- ko if: !currentSnapshot-->
    %button.flocation{ko(click: '$root.createSite')} Create Site
    <!-- /ko -->

  <!-- /ko -->
  <!-- /ko -->

  -# New Site or Edit Site form
  <!-- ko if: newOrEditSite -->
  %form{ko(with: :newOrEditSite, submit: '$root.saveSite'), action: '#/null', method: :post, style: 'display:inline-block;width:100%'}
    .tableheader.w40
      %button.pback{ko(click: '$root.exitSite'), type: 'button'}
      %span.i18b-groupChat
      <!-- ko if: inEditMode() -->
      %span{ko(text: :name)}
      <!-- /ko -->
      <!-- ko if: !inEditMode() -->
      %span New Site
      <!-- /ko -->
    .tablescroll
      %table
        %tbody
          %tr
            %td
              %div
                = label_tag :name, "Name:"
                = text_field_tag :name, '', placeholder: 'Enter new site name', 'data-bind' => kov(value: :name, valueUpdate: :afterkeydown, hasfocus: true, event: {blur: :tryGeolocateName})
              %div
                %label Location:
                = ko_text_field_tag :locationText, event: {keydown: :newLocationKeyPress, blur: :moveLocation}
              <!-- ko foreach: $root.currentCollection().layers() -->
              %div
                %img{ko(attr: {src: "'#{InsteddRails.url}/theme/images/icons/misc/grey/arrow' + (expanded() ? 'Down' : 'Right') + '.png'"}, click: :toggleExpand), style: "position:relative;top:1px;cursor:pointer", width: 11, height: 11}
                %span{ko(text: :name, click: :toggleExpand), style: 'font-weight:bold;color:grey;cursor:pointer'}
              <!-- ko if: expanded() -->
              <!-- ko foreach: fields -->
              %div
                = label_tag '', '', ko(attr: {:for => :esCode}, text: "name + ':'")
                <!-- ko if: kind == 'text' -->
                = ko_text_field_tag :value
                <!-- /ko -->
                <!-- ko if: kind == 'numeric' -->
                = ko_number_field_tag :value
                = ko_link_to_root '?', :showPopupWithMaxValueOfProperty, style: 'text-decoration:underline', tabindex: -1
                <!-- /ko -->
                <!-- ko if: kind == 'select_one' -->
                %select{ko(value: :value, options: :optionsIds, optionsText: 'function(o){return $data.labelFor(o)}')}
                <!-- /ko -->
                <!-- ko if: kind == 'select_many' -->
                %ul.superblyTagItems{ko(foreach: :value)}
                  %li.superblyTagItem{ko(click: '$parent.removeOption')}
                    %span{ko(text: '$parent.labelFor($data)')}
                    %a x
                <!-- ko if: !expanded() -->
                %span{ko(click: :expand), style: 'text-decoration:underline;cursor:pointer'} Add more...
                <!-- /ko -->
                .superblyTagfieldClearer
                <!-- ko if: expanded() -->
                %input{ko(value: :filter, valueUpdate: :afterkeydown, hasfocus: true, event: {keydown: :filterKeyDown}), type: :text, style: 'width:220px'}
                %ul.taglist{ko(foreach: :remainingOptions), style: 'margin-right:60px;margin-top:2px'}
                  %li{ko(attr: {style: 'selected() ? "background-color:#DADAEA" : ""'})}
                    %a{ko(text: :label, click: '$parent.selectOption')}
                <!-- /ko -->
                <!-- /ko -->
                <!-- ko if: kind == 'hierarchy' -->
                .hierarchy-container
                  <!-- ko template: {name: 'field-hierarchy-items-template', with: fieldHierarchyItems} -->
                  <!-- /ko -->
                <!-- /ko -->
              <!-- /ko -->
              <!-- /ko -->
              <!-- /ko -->
    .tablebottom
      %button.grey{ko(enable: :valid), type: 'submit'} Done
      %span{ko(click: '$root.exitSite'), style: 'cursor:pointer'} Cancel
  <!-- /ko -->

  -# Show Site form
  <!-- ko if: showSite -->
  %form{ko(with: :showSite, submit: '$root.saveSite'), action: '#/null', method: :post, style: 'display:inline;width:100%'}
    .tableheader.w40
      %button.pback{ko(click: '$root.exitSite'), type: 'button'}
      %span.i18b-groupChat
      %span{ko(text: :name)}
    .tablescroll
      %table{style: 'width:100%'}
        %tbody
          %tr
            %td
              %div{style: 'margin-bottom:14px'}
                %label Name:
                %span.value{ko(text: :name, visible: '!editingName()', click: 'editName'), style: 'cursor: pointer'}
                <!-- ko if: editingName() -->
                = ko_text_field_tag :name, visible: 'editingName()', hasfocus: true, event: {keydown: :nameKeyPress, blur: :saveName}
                <!-- /ko -->
              %div{style: 'margin-bottom:14px'}
                %label Location:
                %span.value{ko(text: :locationText, visible: '!editingLocation()', click: 'editLocation'), style: 'cursor: pointer'}
                <!-- ko if: editingLocation() -->
                = ko_text_field_tag :locationText, visible: :editingLocation, hasfocus: true, event: {keydown: :locationKeyPress, blur: :saveLocation}
                <!-- /ko -->
              - if Settings.mobile_id?
                %div{style: 'margin-bottom:14px'}
                  %label ID With Prefix:
                  %span.value{ko(text: :idWithPrefix), style: 'cursor: pointer'}
              <!-- ko foreach: collection.layers -->
              %div.coldiv{ko(css: {coldiv: '!expanded()', expdiv: 'expanded()'}), style: 'margin-top:24px;margin-bottom:14px'}
                %span{ko(text: :name, click: :toggleExpand), style: 'font-weight:bold;color:grey;cursor:pointer'}
              <!-- ko if: expanded() -->
              <!-- ko foreach: fields -->
              %div{style: 'margin-bottom:14px'}
                %label{ko(text: "name + ':'")}
                <!-- ko if: hasValue() -->
                <!-- ko if: writeable -->
                %span.value{ko(text: :valueUI, visible: '!editing()', click: 'edit'), style: 'cursor:pointer'}
                <!-- /ko -->
                <!-- ko if: !writeable -->
                %span.value{ko(text: :valueUI)}
                <!-- /ko -->
                <!-- /ko -->
                <!-- ko if: !hasValue() -->
                <!-- ko if: writeable -->
                %span.value{ko(visible: '!editing()', click: 'edit'), style: 'color:grey;cursor:pointer'} (no value)
                <!-- /ko -->
                <!-- ko if: !writeable -->
                %span.value{style: 'color:grey'} (no value)
                <!-- /ko -->
                <!-- /ko -->
                <!-- ko if: editing() && kind == 'text' -->
                = ko_text_field_tag :value, hasfocus: true, event: {keydown: :keyPress, blur: :save}
                <!-- /ko -->
                <!-- ko if: editing() && kind == 'numeric' -->
                = ko_number_field_tag :value, hasfocus: true, event: {keydown: :keyPress, blur: :save}
                <!-- /ko -->
                <!-- ko if: editing() && kind == 'select_one' -->
                %select{ko(value: :value, options: :optionsIds, optionsText: 'function(o){return $data.labelFor(o)}', hasfocus: true, event: {change: :save, blur: :save})}
                <!-- /ko -->
                <!-- ko if: editing() && kind == 'select_many' -->
                %ul.superblyTagItems{ko(foreach: :value)}
                  %li.superblyTagItem{ko(click: '$parent.removeOption')}
                    %span{ko(text: '$parent.labelFor($data)')}
                    %a x
                .superblyTagfieldClearer
                %input{ko(value: :filter, valueUpdate: :afterkeydown, hasfocus: true, event: {keydown: :filterKeyDown}), type: :text, style: 'width:220px'}
                %ul.taglist{ko(foreach: :remainingOptions), style: 'margin-right:40px;margin-top:2px'}
                  %li{ko(attr: {style: 'selected() ? "background-color:#DADAEA" : ""'})}
                    %a{ko(text: :label, click: '$parent.selectOption')}
                %button{ko(click: :save), style: 'float:right'} Update options
                %button{ko(click: :exit), style: 'float:right'} Cancel
                .clear
                <!-- /ko -->
                <!-- ko if: editing() && kind == 'hierarchy' -->
                .hierarchy-container
                  <!-- ko template: {name: 'field-hierarchy-items-template', with: fieldHierarchyItems} -->
                  <!-- /ko -->
                %button{ko(click: :save), style: 'float:right'} Update hierarchy
                %button{ko(click: :exit), style: 'float:right'} Cancel
                .clear
                <!-- /ko -->
              <!-- /ko -->
              <!-- /ko -->
              <!-- /ko -->
    <!-- ko if: !$root.currentCollection().currentSnapshot -->
    .tablebottom
      = link_to 'Edit Site', 'javascript:void()', class: 'icon fedit black', 'data-bind' => kov(click: 'startEditMode')
      = link_to 'Delete Site', 'javascript:void()', class: 'icon fdelete black', 'data-bind' => kov(click: '$root.deleteSite')
    <!-- /ko -->

  <!-- /ko -->
  <!-- /ko -->

  -# Loading Site...
  %form{ko(visible: :loadingSite)}
    .tableheader.w40
      %button.pback
      %span.i18b-groupChat
      %span Loading...
#right-panel.right
  .mapheader
    <!-- ko if: $root.currentCollection() -->
    .greyback
      %span{style: 'margin:0;padding:2px;display:inline-block'}
        Export this result in
        %span{ko(click: :exportInRSS), style: 'text-decoration:underline;cursor:pointer;margin:0'} RSS
        ,
        %span{ko(click: :exportInJSON), style: 'text-decoration:underline;cursor:pointer;margin:0'} JSON
        or
        %span{ko(click: :exportInCSV), style: 'text-decoration:underline;cursor:pointer;margin:0'} CSV
    <!-- /ko -->
    %span{ko(text: :sitesCountText)}
    -#%span.alert 5 alerts
    %button.icon_button.ftable.right{ko(click: '$root.showTable', css: {active: "!$root.showingMap()"})}
    %button.icon_button.fmap.right{ko(click: '$root.showMap', css: {active: "$root.showingMap()"})}
    %br{clear: :all}
  #map
