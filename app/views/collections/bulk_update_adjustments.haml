= javascript_include_tag 'import_wizard'

:javascript
  $(function() { initBulkUpdate(#{collection.id}, #{@sample.to_json}); });

:css
  .ignored, .ignored input, .ignored select { color: grey; }
  .error { color: red; }

= render 'tabs'

.tabsline
  %h2 Bulk update
  %p Now specify how to map each column to a field.
  %br/

  %table
    %tr
      %td{valign: :top}
        %div{style: 'height: 400px;overflow:auto'}
          %ul{ko(foreach: :columns)}
            %li{ko(css: {ignored: "kind() == 'ignore'"})}
              %div
                %strong{ko(text: :name)}
                %ul
                  %li
                    Sample values:
                    %span{ko(text: :sample)}
                  %li
                    Use as:
                    = select_tag :kind, options_for_select([['Text field', 'text'], ['Numeric field', 'numeric'], ['Select one field', 'select_one'], ['Select many field', 'select_many'], ['Name', 'name'], ['Latitude', 'lat'], ['Longitude', 'lng'], ['Ignore', 'ignore']]), 'data-bind' => kov(value: :kind)
                    <!-- ko if: kind() == 'select_one' || kind() == 'select_many' -->
                    = select_tag :selectKind, options_for_select([['Use as the code', 'code'], ['Use as the label', 'label'], ['Use as both the code and label', 'both']]), 'data-bind' => kov(value: :selectKind)
                    <!-- /ko -->
                  <!-- ko if: mapsToField() -->
                  %li
                    Field Code:
                    %input{ko(value: :code, valueUpdate: :afterkeydown)}
                  %li
                    Field Name:
                    %input{ko(value: :label, valueUpdate: :afterkeydown)}
                  <!-- /ko -->
      %td{ko(with: :site), valign: :top}
        %div{style: 'height: 400px;overflow:auto'}
          Sample site preview:
          %ul
            %li
              %span{ko(css: {error: "!name() || hasMoreThanOneName()"})} Name:
              %span{ko(text: :name)}
            %li
              Location:
              %ul
                %li
                  Latitude:
                  %span{ko(text: :lat)}
                %li
                  Longitude:
                  %span{ko(text: :lng)}
            %li
              Properties:
              %ul{ko(foreach: :properties)}
                %li
                  %strong
                    Code:
                    %span{ko(text: :code)}
                    %br/
                  Name:
                  %span{ko(text: :name)}
                  %br/
                  Field type:
                  %span{ko(text: :kind)}
                  %br/
                  <!-- ko if: kind() != 'select_one' && kind() != 'select_many' -->
                  Value:
                  %span{ko(text: :value)}
                  %br/
                  <!-- /ko -->
                  <!-- ko if: kind() == 'select_one' || kind() == 'select_many' -->
                  %span{ko(css: {error: "!valueCode()"})} Value code:
                  %span{ko(text: :valueCode)}
                  %br/
                  %span{ko(css: {error: "!valueLabel()"})} Value label:
                  %span{ko(text: :valueLabel)}
                  %br/
                  <!-- /ko -->

  %br/
  <!-- ko if: importing() -->
  Importing, please wait. This might take several minutes.
  <!-- /ko -->
  <!-- ko if: importError() -->
  %span{style: 'color:red'} Sorry, something failed during the import. Please contact InSTEDD for support.
  <!-- /ko -->
  <!-- ko if: !importing() && !importError() -->
  <!-- ko if: valid() -->
  %button{ko(click: :startImport)} Start importing
  <!-- /ko -->
  <!-- ko if: !valid() -->
  %span.error Fix this error to start importing:
  %span{ko(text: :error)}
  <!-- /ko -->
  <!-- /ko -->
